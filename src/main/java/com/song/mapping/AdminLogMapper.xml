<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.dao.AdminLogMapper">
  <resultMap id="BaseResultMap" type="com.song.model.AdminLog">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="log_group" jdbcType="INTEGER" property="logGroup" />
    <result column="log_user" jdbcType="VARCHAR" property="logUser" />
    <result column="log_ip" jdbcType="VARCHAR" property="logIp" />
    <result column="log_time" jdbcType="TIMESTAMP" property="logTime" />
    <result column="log_app" jdbcType="VARCHAR" property="logApp" />
    <result column="log_con" jdbcType="VARCHAR" property="logCon" />
    <result column="log_status" jdbcType="INTEGER" property="logStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    log_id, log_group, log_user, log_ip, log_time, log_app, log_con, log_status
  </sql>
  <select id="selectlist"  resultMap="BaseResultMap">
    select * from le_admin_log order by log_id desc
  </select>
  
  
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from le_admin_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from le_admin_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.song.model.AdminLog">
    insert into le_admin_log (log_id, log_group, log_user, 
      log_ip, log_time, log_app, 
      log_con, log_status)
    values (#{logId,jdbcType=INTEGER}, #{logGroup,jdbcType=INTEGER}, #{logUser,jdbcType=VARCHAR}, 
      #{logIp,jdbcType=VARCHAR}, #{logTime,jdbcType=TIMESTAMP}, #{logApp,jdbcType=VARCHAR}, 
      #{logCon,jdbcType=VARCHAR}, #{logStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.song.model.AdminLog">
    insert into le_admin_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="logGroup != null">
        log_group,
      </if>
      <if test="logUser != null">
        log_user,
      </if>
      <if test="logIp != null">
        log_ip,
      </if>
      <if test="logTime != null">
        log_time,
      </if>
      <if test="logApp != null">
        log_app,
      </if>
      <if test="logCon != null">
        log_con,
      </if>
      <if test="logStatus != null">
        log_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="logGroup != null">
        #{logGroup,jdbcType=INTEGER},
      </if>
      <if test="logUser != null">
        #{logUser,jdbcType=VARCHAR},
      </if>
      <if test="logIp != null">
        #{logIp,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logApp != null">
        #{logApp,jdbcType=VARCHAR},
      </if>
      <if test="logCon != null">
        #{logCon,jdbcType=VARCHAR},
      </if>
      <if test="logStatus != null">
        #{logStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.model.AdminLog">
    update le_admin_log
    <set>
      <if test="logGroup != null">
        log_group = #{logGroup,jdbcType=INTEGER},
      </if>
      <if test="logUser != null">
        log_user = #{logUser,jdbcType=VARCHAR},
      </if>
      <if test="logIp != null">
        log_ip = #{logIp,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logApp != null">
        log_app = #{logApp,jdbcType=VARCHAR},
      </if>
      <if test="logCon != null">
        log_con = #{logCon,jdbcType=VARCHAR},
      </if>
      <if test="logStatus != null">
        log_status = #{logStatus,jdbcType=INTEGER},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.model.AdminLog">
    update le_admin_log
    set log_group = #{logGroup,jdbcType=INTEGER},
      log_user = #{logUser,jdbcType=VARCHAR},
      log_ip = #{logIp,jdbcType=VARCHAR},
      log_time = #{logTime,jdbcType=TIMESTAMP},
      log_app = #{logApp,jdbcType=VARCHAR},
      log_con = #{logCon,jdbcType=VARCHAR},
      log_status = #{logStatus,jdbcType=INTEGER}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>